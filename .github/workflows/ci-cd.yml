name: Deploy AWS CDK Stack

on:
  push:
    branches:
      - aws_backend_init  # This triggers the workflow on pushes to this branch

jobs:
  deploy:
    runs-on: ubuntu-latest  # Use the latest Ubuntu image for the runner

    steps:
      # Checkout the repository to get access to the code
      - name: Checkout code
        uses: actions/checkout@v2

      # Set up Node.js (version 22)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '22'

      # Install dependencies (including TypeScript)
      - name: Install dependencies
        run: |
          npm install
          npm install --save-dev typescript@latest
          npm install aws-cdk
        working-directory: Backend/AWS_SignUp/

      # Set permissions for CDK (needed for CDK binary execution)
      - name: Set permissions for CDK
        run: chmod +x node_modules/.bin/cdk
        working-directory: Backend/AWS_SignUp/

      # Install AWS CDK globally (optional step to resolve any CDK issues)
      - name: Install AWS CDK globally
        run: npm install -g aws-cdk

      # Configure AWS credentials using GitHub secrets (make sure your secrets are set)
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      # Bootstrap the AWS CDK app (prepare the environment for deployment)
      - name: Bootstrapping CDK app
        run: npx cdk bootstrap
        working-directory: Backend/AWS_SignUp/

      # Deploy the AWS CDK stack (no manual approval for changes)
      - name: Deploy AWS CDK Stack
        run: |
          export RDS_ENDPOINT=${{ secrets.ENDPOINT }}
          export RDS_PASSWORD=${{ secrets.PASSWORD }}
          npx cdk deploy --require-approval never
        working-directory: Backend/AWS_SignUp/


